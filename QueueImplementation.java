public class QueueImplementation {     public  static class Node{            int data;            Node next;            Node(int data){                this.data=data;                next=null;            }        }      public static class Queue{            static Node head=null;            static Node tail=null;            public  boolean isEmpty(){                return tail==null && head==null;            }            //enqueue;            public  void enqueue(int data){                Node newNodem =new Node(data);                if(tail==null){                    tail= head = newNodem;                    return;                }                tail.next=newNodem;                tail=newNodem;            }            //dequeue;            public  void dequeue(){                if(isEmpty()){                    System.out.println("The queue is empty )>:");                    return;                }                if(head==tail){                    tail=null;                }                int front=head.data;                head=head.next;            }            public  int peek(){                if(isEmpty()){                    return -1;                }                return head.data;            }        }        public static void main(String[] args) {            Queue q=new Queue();            q.enqueue(5);            q.enqueue(6);            q.enqueue(7);            q.enqueue(8);            while(!q.isEmpty()){                System.out.println(q.peek());                q.dequeue();            }        }    }