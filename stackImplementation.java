import java.util.ArrayList;import java.util.Stack;public class stackImplementation {    // Stack implementation using ArrayList    public static class Stack {        ArrayList<Integer> list = new ArrayList<>();        public boolean isEmpty() {            return list.size() == 0;        }        // push        public void push(int data) {            list.add(data);        }        //peek        public int peek() {            if (isEmpty()) {                return -1;            }            return list.get(list.size() - 1);        }        //pop        public int pop() {            if (isEmpty()) {                return -1;            }            int result = list.get(list.size() - 1);            list.remove(list.size() - 1);            return result;        }        public  void pushBottom(int data){            list.add(0,data);        }    }        // Stack implementation using LinkedList        public static class Node {            int data;            Node next;            Node(int data) {                this.data = data;                next = null;            }        }        public static class stack {            public static Node head;            public boolean isEmpty() {                return head == null;            }            public void push(int data) {                Node node = new Node(data);                if (isEmpty()) {                    head = node;                    return;                }                node.next = head;                head = node;            }            public int pop() {                if (isEmpty()) {                    return -1;                }                int result = head.data;                head = head.next;                return result;            }            public int peek() {                if (isEmpty()) {                    return -1;                }                return head.data;            }        }        public static void main(String[] args) {        Stack st=new Stack();        st.push(232);        st.push(12);        st.push(5);        st.push(6);        st.pushBottom(25);        while (!st.isEmpty()){            System.out.println(st.peek());            st.pop();        }         /*   stack s = new stack();            System.out.println(s.pop());*/        }    }